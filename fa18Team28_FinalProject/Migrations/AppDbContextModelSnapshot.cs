// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using fa18Team28_FinalProject.DAL;

namespace fa18Team28_FinalProject.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("fa18Team28_FinalProject.Models.Book", b =>
                {
                    b.Property<int>("BookID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author");

                    b.Property<int>("CopiesOnHand");

                    b.Property<decimal>("Cost");

                    b.Property<string>("Description");

                    b.Property<int?>("GenreID");

                    b.Property<DateTime>("LastOrdered");

                    b.Property<decimal>("Price");

                    b.Property<DateTime>("PublishedDate");

                    b.Property<int>("Reordered");

                    b.Property<string>("Title");

                    b.Property<int>("UniqueID");

                    b.HasKey("BookID");

                    b.HasIndex("GenreID");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("fa18Team28_FinalProject.Models.CustomerOrder", b =>
                {
                    b.Property<int>("CustomerOrderID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CustomerOrderDate");

                    b.Property<string>("CustomerOrderNotes");

                    b.Property<int?>("UserID");

                    b.HasKey("CustomerOrderID");

                    b.HasIndex("UserID");

                    b.ToTable("CustomerOrder");
                });

            modelBuilder.Entity("fa18Team28_FinalProject.Models.CustomerOrderDetail", b =>
                {
                    b.Property<int>("CustomerOrderDetailID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BookID");

                    b.Property<int>("CustomerOrderDetailNotes");

                    b.Property<decimal>("ExtendedPrice");

                    b.Property<int?>("OrderCustomerOrderID");

                    b.Property<decimal>("ProductPrice");

                    b.Property<int>("Quantity");

                    b.HasKey("CustomerOrderDetailID");

                    b.HasIndex("BookID");

                    b.HasIndex("OrderCustomerOrderID");

                    b.ToTable("CustomerOrderDetail");
                });

            modelBuilder.Entity("fa18Team28_FinalProject.Models.Discount", b =>
                {
                    b.Property<string>("DiscountID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<DateTime>("EndDate");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("DiscountID");

                    b.ToTable("Discount");
                });

            modelBuilder.Entity("fa18Team28_FinalProject.Models.DiscountDetail", b =>
                {
                    b.Property<int>("DiscountDetailID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerOrderID");

                    b.Property<string>("DiscountID");

                    b.HasKey("DiscountDetailID");

                    b.HasIndex("CustomerOrderID");

                    b.HasIndex("DiscountID");

                    b.ToTable("DiscountDetail");
                });

            modelBuilder.Entity("fa18Team28_FinalProject.Models.Genre", b =>
                {
                    b.Property<int>("GenreID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GenreName");

                    b.HasKey("GenreID");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("fa18Team28_FinalProject.Models.ManagerOrder", b =>
                {
                    b.Property<int>("ManagerOrderID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ManagerOrderDate");

                    b.Property<string>("ManagerOrderDetailNotes");

                    b.Property<int?>("UserID");

                    b.HasKey("ManagerOrderID");

                    b.HasIndex("UserID");

                    b.ToTable("ManagerOrder");
                });

            modelBuilder.Entity("fa18Team28_FinalProject.Models.ManagerOrderDetail", b =>
                {
                    b.Property<int>("ManagerOrderDetailID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BookID");

                    b.Property<decimal>("ExtendedCost");

                    b.Property<int>("ManagerOrderDetailsNotes");

                    b.Property<int?>("ManagerOrderID");

                    b.Property<decimal>("ProductCost");

                    b.Property<int>("Quantity");

                    b.HasKey("ManagerOrderDetailID");

                    b.HasIndex("BookID");

                    b.HasIndex("ManagerOrderID");

                    b.ToTable("ManagerOrderDetail");
                });

            modelBuilder.Entity("fa18Team28_FinalProject.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("City");

                    b.Property<int>("CreditCard1");

                    b.Property<int>("CreditCard2");

                    b.Property<int>("CreditCard3");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<int>("NumberofOrders");

                    b.Property<string>("Password");

                    b.Property<int>("PhoneNumber");

                    b.Property<string>("ReviewsApproved");

                    b.Property<string>("ReviewsWritten");

                    b.Property<string>("State");

                    b.Property<string>("StreetAddress");

                    b.Property<int>("Zipcode");

                    b.HasKey("UserID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("fa18Team28_FinalProject.Models.Book", b =>
                {
                    b.HasOne("fa18Team28_FinalProject.Models.Genre", "Genre")
                        .WithMany("Books")
                        .HasForeignKey("GenreID");
                });

            modelBuilder.Entity("fa18Team28_FinalProject.Models.CustomerOrder", b =>
                {
                    b.HasOne("fa18Team28_FinalProject.Models.User", "User")
                        .WithMany("CustomerOrders")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("fa18Team28_FinalProject.Models.CustomerOrderDetail", b =>
                {
                    b.HasOne("fa18Team28_FinalProject.Models.Book", "Book")
                        .WithMany("CustomerOrderDetails")
                        .HasForeignKey("BookID");

                    b.HasOne("fa18Team28_FinalProject.Models.CustomerOrder", "Order")
                        .WithMany("CustomerOrderDetails")
                        .HasForeignKey("OrderCustomerOrderID");
                });

            modelBuilder.Entity("fa18Team28_FinalProject.Models.DiscountDetail", b =>
                {
                    b.HasOne("fa18Team28_FinalProject.Models.CustomerOrder", "CustomerOrder")
                        .WithMany("DiscountDetails")
                        .HasForeignKey("CustomerOrderID");

                    b.HasOne("fa18Team28_FinalProject.Models.Discount", "Discount")
                        .WithMany("DiscountDetails")
                        .HasForeignKey("DiscountID");
                });

            modelBuilder.Entity("fa18Team28_FinalProject.Models.ManagerOrder", b =>
                {
                    b.HasOne("fa18Team28_FinalProject.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("fa18Team28_FinalProject.Models.ManagerOrderDetail", b =>
                {
                    b.HasOne("fa18Team28_FinalProject.Models.Book", "Book")
                        .WithMany("ManagerOrderDetails")
                        .HasForeignKey("BookID");

                    b.HasOne("fa18Team28_FinalProject.Models.ManagerOrder", "ManagerOrder")
                        .WithMany("ManagerOrderDetails")
                        .HasForeignKey("ManagerOrderID");
                });
#pragma warning restore 612, 618
        }
    }
}
